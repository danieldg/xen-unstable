
The interface between Xen and overlying guest OSes has changed in the
following ways since version 1.0:

Modified hypercall 'pt_update'
------------------------------
Page-table updates passed to the 'pt_update' hypercall must now
specify a virtual address that maps the PTE to be modified. Previously
a physical address was used, requiring Xen to temporarily map the PTE
into its own private region so that it could be read and written.
This affects only commands of type PGREQ_NORMAL_UPDATE and
PGREQ_UNCHECKED_UPDATE.

New hypercall 'update_va_mapping'
---------------------------------
A new high-speed page-table update method has been introduced, which
may be of particular benefit when fixing up application page faults.
Invoked as 'update_va_mapping(page_number, new_pte_value, flags)':
 <page_number>: The virtual page number in the current address space 
                whose PTE is to be modified.
 <new_pte_value>: The new value to write into the PTE.
 <flags>: An ORed combination of
          UVMF_INVLPG: Flush stale TLB entry of the updated page mapping
          UVMF_FLUSH_TLB: Flush all TLB entries
You can see this new call in use in Xenolinux (common/memory.c).

