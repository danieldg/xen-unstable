/*
 * XML.java
 * 03.03.26 aho creation
 */

package org.xenoserver.control;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;

/**
 * Utility class for loading and saving state through XML files.
 */
public class XML {
    /** The document we are reading/writing. */
    private static Document document = null;

    /**
     * Save the state of the managers to the configuration file given.
     * @param pm The PartitionManager to save.
     * @param vdm The VirtualDiskManager to save.
     * @param filename The configuration filename to save to.
     */
    public static void saveState(
        PartitionManager pm,
        VirtualDiskManager vdm,
        String filename) {
        PrintWriter out;

        try {
            out = new PrintWriter(new BufferedWriter(new FileWriter(filename)));
        } catch (IOException e) {
            System.err.println("XML.dump_state error [" + filename + "]");
            System.err.println(e);
            return;
        }

        out.println("<?xml version=\"1.0\"?>");
        out.println("<vdmanager>");
        pm.dumpAsXML(out);
        vdm.dumpAsXML(out);
        out.println("</vdmanager>");

        out.close();
        return;
    }

    /**
     * Load the state of the managers from the given configuration file.
     * @param pm The PartitionManager to load.
     * @param vdm The VirtualDomainManager to load.
     * @param filename The filename to read the configuration from.
     */
    public static void loadState(
        PartitionManager pm,
        VirtualDiskManager vdm,
        String filename) {
        if (document == null) {
            loadFile(filename);
        }

        XMLHelper.parse(pm, vdm, document);
    }

    /**
     * Load an XML file and parse it into a Document.
     * @param filename The file to load.
     */
    private static void loadFile(String filename) {
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();

        try {
            File file = new File(filename);

            DocumentBuilder builder = factory.newDocumentBuilder();
            document = builder.parse(file);
        } catch (SAXParseException spe) /* error generated by parser */ {
            System.err.println(
                "xml parser exception on line "
                    + spe.getLineNumber()
                    + " for uri "
                    + spe.getSystemId());
            System.err.println(spe.getMessage());

            Exception x = spe;
            if (spe.getException() != null) {
                x = spe.getException();
            }
            x.printStackTrace();
            System.exit(1);
        } catch (SAXException sxe) {
            Exception e = sxe;
            if (sxe.getException() != null) {
                e = sxe.getException();
            }
            e.printStackTrace();
            System.exit(1);
        } catch (ParserConfigurationException pce) {
            pce.printStackTrace();
        } catch (FileNotFoundException fnfe) {
            System.err.println(
                "warning: state file not found [" + filename + "]");
        } catch (IOException ioe) {
            ioe.printStackTrace();
        }
        return;
    }
}
